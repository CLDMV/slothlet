# Individual repo: .github/workflows/ci.yml
name: üß™ CI Tests & Build

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    branches: [master, main]
    paths-ignore:
      - "**.md"
      - "docs/**"
      - "*.md"
      - "LICENSE"
      - ".gitignore"
  push:
    branches: ["**"]
    paths-ignore:
      - "**.md"
      - "docs/**"
      - "*.md"
      - "LICENSE"
      - ".gitignore"
  workflow_dispatch:
    inputs:
      debug:
        description: "Enable debug logging for troubleshooting"
        type: boolean
        required: false
        default: false
      skip_matrix_tests:
        description: "Skip matrix testing (use single node version only)"
        type: boolean
        required: false
        default: false

jobs:
  ci:
    name: üèóÔ∏è Continuous Integration
    uses: CLDMV/.github/.github/workflows/ci.yml@v1
    with:
      package_name: "@cldmv/slothlet" # Required: Your NPM package name
      debug: ${{ github.event_name == 'workflow_dispatch' && inputs.debug || false }}
      # skip_matrix_tests: ${{ github.event_name == 'workflow_dispatch' && inputs.skip_matrix_tests || false }}

      # Node.js Version Configuration (choose one approach)
      # Option 1: Single Node.js version (simple)
      # node_version: "lts/*" # Single Node.js version to test (default: lts/*)
      # skip_matrix_tests: true # Use this with node_version (default: false)

      # Option 2: Matrix testing (comprehensive) - DEFAULT BEHAVIOR
      # min_node_version: "20" # Minimum Node.js version for matrix testing (default: 20)
      # max_node_major: "22" # Maximum Node.js major version (default: 22)

      # Package & Build Configuration
      # package_manager: "npm" # Package manager - npm or yarn (default: npm)
      # test_command: "npm test" # Command to run tests (default: npm test)
      # build_command: "npm run build:ci" # Command to build package (default: npm run build:ci)

      # Test Control Options
      # skip_performance_tests: false # Skip performance tests during CI (default: false)
      # skip_matrix_tests: false # Skip matrix testing, use single version (default: false)

    # Authentication & Bot Configuration
    # The workflow supports automatic App token detection for enhanced permissions and proper attribution:
    # - WITH App secrets: Operations attributed to CLDMV bot, enhanced permissions for workflow repositories
    # - WITHOUT App secrets: Falls back to GitHub Actions bot with standard permissions
    # Note: CI workflow currently only runs build/test jobs, but App secrets are included for consistency
    # To set up App authentication, add these secrets to your repository settings:
    secrets:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      # Optional: CLDMV Bot credentials for enhanced permissions and proper attribution
      # If not provided, will use default GITHUB_TOKEN with GitHub Actions bot attribution
      BOT_APP_ID: ${{ secrets.CLDMV_BOT_APP_ID }}
      BOT_APP_PRIVATE_KEY: ${{ secrets.CLDMV_BOT_APP_PRIVATE_KEY }}

  # ‚úÖ Stable check that runs on BOTH push and PR and mirrors ci result
  required-check:
    name: ‚úÖ Required PR Check
    needs: ci
    # run on both push and PR so the context exists on the PR head SHA
    if: ${{ always() }}
    runs-on: ubuntu-latest
    steps:
      - name: Mirror reusable result
        run: |
          echo "ci.result=${{ needs.ci.result }}"
          if [ "${{ needs.ci.result }}" = "success" ]; then
            echo "Reusable CI passed."
            exit 0
          elif [ "${{ needs.ci.result }}" = "failure" ] || [ "${{ needs.ci.result }}" = "cancelled" ]; then
            echo "Reusable CI did not pass."
            exit 1
          else
            # covers 'skipped' or undefined; force red to avoid silent green
            echo "Reusable CI produced no pass/fail; treating as failure."
            exit 1
          fi
